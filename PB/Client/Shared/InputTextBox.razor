@using System.Text.RegularExpressions;
@using System.Linq.Expressions;
@inherits InputText

<div class="@DivClass">
    <div class="@FormGroupClass">
        <label class="form-label mt-0 me-1" style="text-align:left;">
            @Label
            @if (IsRequired)
            {
                <span class="ms-2" style="color:red">*</span>
            }
        </label>
        <input class="form-control " placeholder="@PlaceHolder" type="text" value="@CurrentValue" @attributes="AdditionalAttributes" @oninput="EventCallback.Factory.CreateBinder<string>(this, __value => CurrentValueAsString = __value,CurrentValueAsString)">
        @if (ValidationFor != null)
        {
            <ValidationMessage For="@ValidationFor" />
        }
    </div>
</div>

@code {

    [Parameter] public string? Label { get; set; }
    [Parameter] public Expression<Func<string>>? ValidationFor { get; set; } = null;
    [Parameter] public string? PlaceHolder { get; set; } = "";
    [Parameter] public string DivClass { get; set; } = "col-12 col-md-6";
    [Parameter] public string? FormGroupClass { get; set; } = "form-group";
    [Parameter] public bool IsRequired { get; set; } = false;


}
