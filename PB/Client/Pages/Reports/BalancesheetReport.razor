@page "/balancesheet-report"
@using PB.Shared.Enum.Reports
@using PB.Shared.Models.Reports

<PageLayoutNew>
    <div class="main-container container-fluid">
        <div class="page-header d-flex justify-content-between">
            <h1 class="page-title">Reports</h1>
            <div class="btn-toolbar float-right mr-7">
                <div class="form-group">
                    <select name="country" id="timePeriodSelect" class="form-control form-select" @onchange="(ChangeEventArgs e) => HandleReportPeriodSelected(e)">
                        <option value="0">Choose</option>
                        @foreach (var reportPeriod in Enum.GetValues(typeof(ReportPeriods)))
                        {
                            if (PeriodTypeID == (int)reportPeriod)
                            {
                                <option value="@((int)reportPeriod)" selected>@reportPeriod.ToString().Replace('_', ' ')</option>
                            }
                            else
                            {
                                <option value="@((int)reportPeriod)">@reportPeriod.ToString().Replace('_', ' ')</option>
                            }
                        }
                    </select>
                </div>
                <a class="btn btn-primary btn-md me-2 ms-2" style="height:38px;" @onclick="NavigateToReportsPage"> <i class="fa fa-times fs-15"></i></a>
            </div>
        </div>
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-body">
                        <div class="row pt-5 pb-5">
                            <div class="col-lg-12 text-center">
                                <p class="fs-18 fw-bold mb-0">@BalancesheetReportModel.ClientName</p>
                                <p class="h3 mb-1">Balancesheet</p>
                                <p>As of @BalanceSheetReportPostModel.Date.Value.ToString("dd/MM/yyy")</p>
                            </div>
                        </div>
                        <div class="table-responsive push">
                            <table class="table table-bordered table-hover mb-0 text-nowrap">
                                <tbody>
                                    <tr class="">
                                        <th>Account</th>
                                        <th class="text-end">Total</th>
                                    </tr>
                                    <!--Assets-->
                                    <tr>
                                        <td colspan="2" class="fw-bolder">Assets</td>
                                    </tr>
                                    <tr>
                                        <td colspan="2" class="fw-bold" style="padding-left: 20px;">Direct Income</td>
                                    </tr>
                                    <!--Direct Income-->
                                    @foreach (var directIncome in BalancesheetReportModel.DirectIncome)
                                    {
                                        @if (!directIncome.IsLedger)
                                        {
                                            var subItems = BalancesheetReportModel.DirectIncome.Where(dI => dI.ParentID == directIncome.ID).ToList();
                                            <tr>
                                                <td>
                                                    <a href="#" class="dropdown-toggle" style="padding-left: 20px;">@directIncome.Particulars</a>
                                                    <div class="dropdown-content">
                                                        <!-- Dropdown items -->
                                                        @foreach (var subItem in subItems)
                                                        {
                                                            <a style="@subItem.LeftMarginStyle;">@subItem.Particulars</a>
                                                        }
                                                    </div>
                                                </td>
                                                <td class="text-end">
                                                    <a href="#" class="dropdown-toggle">@directIncome.TotalAmount</a>
                                                    <div class="dropdown-content">
                                                        <!-- Dropdown items -->
                                                        <a></a>
                                                        <a></a>
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                        else
                                        {
                                            <tr>
                                                <td style="padding-left: 60px;">@directIncome.Particulars</td>
                                                <td class="text-end"><a>@directIncome.TotalAmount</a></td>
                                            </tr>
                                        }
                                    }
                                    <!--Gross Proit-->
                                    @if (BalancesheetReportModel.GrossProfit > 0)
                                    {
                                        <tr>
                                            <td style="padding-left: 60px;">Gross Profit</td>
                                            <td class="text-end">@BalancesheetReportModel.GrossProfit</td>
                                        </tr>
                                    }
                                    <!--Indiect Income-->
                                    @foreach (var indirectIncome in BalancesheetReportModel.IndirectIncome)
                                    {
                                        @if (!indirectIncome.IsLedger)
                                        {
                                            var subItems = BalancesheetReportModel.DirectIncome.Where(dI => dI.ParentID == indirectIncome.ID).ToList();
                                            <tr>
                                                <td>
                                                    <a href="#" class="dropdown-toggle" style="padding-left: 20px;">@indirectIncome.Particulars</a>
                                                    <div class="dropdown-content">
                                                        <!-- Dropdown items -->
                                                        @foreach (var subItem in subItems)
                                                        {
                                                            <a style="@subItem.LeftMarginStyle;">@subItem.Particulars</a>
                                                        }
                                                    </div>
                                                </td>
                                                <td class="text-end">
                                                    <a href="#" class="dropdown-toggle">@indirectIncome.TotalAmount</a>
                                                    <div class="dropdown-content">
                                                        <!-- Dropdown items -->
                                                        <a></a>
                                                        <a></a>
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                        else
                                        {
                                            <tr>
                                                <td style="padding-left: 60px;">@indirectIncome.Particulars</td>
                                                <td class="text-end"><a>@indirectIncome.TotalAmount</a></td>
                                            </tr>
                                        }
                                    }
                                    <!--Net Proit-->
                                    @if (BalancesheetReportModel.NetProfit > 0)
                                    {
                                        <tr>
                                            <td style="padding-left: 60px;">Net Profit</td>
                                            <td class="text-end">@BalancesheetReportModel.NetProfit</td>
                                        </tr>
                                    }
                                    <!--Assests-->
                                    @foreach (var asset in BalancesheetReportModel.Asset)
                                    {
                                        @if (!asset.IsLedger)
                                        {
                                            var subItems = BalancesheetReportModel.DirectIncome.Where(dI => dI.ParentID == asset.ID).ToList();
                                            <tr>
                                                <td>
                                                    <a href="#" class="dropdown-toggle" style="padding-left: 20px;">@asset.Particulars</a>
                                                    <div class="dropdown-content">
                                                        <!-- Dropdown items -->
                                                        @foreach (var subItem in subItems)
                                                        {
                                                            <a style="@subItem.LeftMarginStyle;">@subItem.Particulars</a>
                                                        }
                                                    </div>
                                                </td>
                                                <td class="text-end">
                                                    <a href="#" class="dropdown-toggle">@asset.TotalAmount</a>
                                                    <div class="dropdown-content">
                                                        <!-- Dropdown items -->
                                                        <a></a>
                                                        <a></a>
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                        else
                                        {
                                            <tr>
                                                <td>@asset.Particulars</td>
                                                <td class="text-end">@asset.TotalAmount</td>
                                            </tr>
                                        }
                                    }
                                    <!--Assets Summary-->
                                    <tr>
                                        <td>Total for Assets</td>
                                        <td class="text-end">
                                            @(BalancesheetReportModel.DirectIncome.Sum(item => item.TotalAmount) + BalancesheetReportModel.IndirectIncome.Sum(item => item.TotalAmount) + BalancesheetReportModel.Asset.Sum(item => item.TotalAmount) + BalancesheetReportModel.NetProfit + BalancesheetReportModel.GrossProfit)
                                        </td>
                                    </tr>

                                    <!--Liabilities-->
                                    <tr>
                                        <td colspan="2" class="fw-bolder">Liabilities</td>
                                    </tr>
                                    <tr>
                                        <td colspan="2" class="fw-bold" style="padding-left: 20px;">Direct Expense</td>
                                    </tr>
                                    <!--Direct Expense-->
                                    @foreach (var directExpense in BalancesheetReportModel.DirectExpense)
                                    {
                                        @if (!directExpense.IsLedger)
                                        {
                                            var subItems = BalancesheetReportModel.DirectIncome.Where(dI => dI.ParentID == directExpense.ID).ToList();
                                            <tr>
                                                <td>
                                                    <a href="#" class="dropdown-toggle" style="padding-left: 20px;">@directExpense.Particulars</a>
                                                    <div class="dropdown-content">
                                                        <!-- Dropdown items -->
                                                        @foreach (var subItem in subItems)
                                                        {
                                                            <a style="@subItem.LeftMarginStyle" href="/account-transactions.html">@subItem.Particulars</a>
                                                        }
                                                    </div>
                                                </td>
                                                <td class="text-end">
                                                    <a href="#" class="dropdown-toggle">@directExpense.TotalAmount</a>
                                                    <div class="dropdown-content">
                                                        <!-- Dropdown items -->
                                                        <a></a>
                                                        <a></a>
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                        else
                                        {
                                            <tr>
                                                <td>@directExpense.Particulars</td>
                                                <td class="text-end">@directExpense.TotalAmount</td>
                                            </tr>
                                        }
                                    }
                                    <!--Gross Loss-->
                                    @if (BalancesheetReportModel.GrossLoss > 0)
                                    {
                                        <tr>
                                            <td>Gross Loss</td>
                                            <td class="text-end">@BalancesheetReportModel.GrossLoss</td>
                                        </tr>
                                    }
                                    <!--Indiect Expense-->
                                    @foreach (var indirectExpense in BalancesheetReportModel.IndirectExpense)
                                    {
                                        @if (!indirectExpense.IsLedger)
                                        {
                                            var subItems = BalancesheetReportModel.DirectIncome.Where(dI => dI.ParentID == indirectExpense.ID).ToList();
                                            <tr>
                                                <td>
                                                    <a href="#" class="dropdown-toggle" style="padding-left: 20px;">@indirectExpense.Particulars</a>
                                                    <div class="dropdown-content">
                                                        <!-- Dropdown items -->
                                                        @foreach (var subItem in subItems)
                                                        {
                                                            <a style="@subItem.LeftMarginStyle" href="/account-transactions.html">@subItem.Particulars</a>
                                                        }
                                                    </div>
                                                </td>
                                                <td class="text-end">
                                                    <a href="#" class="dropdown-toggle">@indirectExpense.TotalAmount</a>
                                                    <div class="dropdown-content">
                                                        <!-- Dropdown items -->
                                                        <a></a>
                                                        <a></a>
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                        else
                                        {
                                            <tr>
                                                <td>@indirectExpense.Particulars</td>
                                                <td class="text-end">@indirectExpense.TotalAmount</td>
                                            </tr>
                                        }
                                    }
                                    <!--Net Loss-->
                                    @if (BalancesheetReportModel.NetLoss > 0)
                                    {
                                        <tr>
                                            <td>Net Loss</td>
                                            <td class="text-end">@BalancesheetReportModel.NetLoss</td>
                                        </tr>
                                    }

                                    <!--Liabilities-->
                                    @foreach (var liability in BalancesheetReportModel.Liability)
                                    {
                                        @if (!liability.IsLedger)
                                        {
                                            var subItems = BalancesheetReportModel.DirectIncome.Where(dI => dI.ParentID == liability.ID).ToList();
                                            <tr>
                                                <td>
                                                    <a href="#" class="dropdown-toggle" style="padding-left: 20px;">@liability.Particulars</a>
                                                    <div class="dropdown-content">
                                                        <!-- Dropdown items -->
                                                        @foreach (var subItem in subItems)
                                                        {
                                                            <a style="@subItem.LeftMarginStyle" href="/account-transactions.html">@subItem.Particulars</a>
                                                        }
                                                    </div>
                                                </td>
                                                <td class="text-end">
                                                    <a href="#" class="dropdown-toggle">@liability.TotalAmount</a>
                                                    <div class="dropdown-content">
                                                        <!-- Dropdown items -->
                                                        <a></a>
                                                        <a></a>
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                        else
                                        {
                                            <tr>
                                                <td>@liability.Particulars</td>
                                                <td class="text-end">@liability.TotalAmount</td>
                                            </tr>
                                        }
                                    }
                                    <!--Liability Summary-->
                                    <tr>
                                        <td style="padding-left: 60px;">Total for Liabilities</td>
                                        <td class="text-end">
                                            @(BalancesheetReportModel.DirectExpense.Sum(item => item.TotalAmount) + BalancesheetReportModel.IndirectExpense.Sum(item => item.TotalAmount) + BalancesheetReportModel.Liability.Sum(item => item.TotalAmount) + BalancesheetReportModel.NetLoss + BalancesheetReportModel.GrossLoss)
                                        </td>
                                    </tr>

                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</PageLayoutNew>

<div class="modal fade" id="ReportPeriodModal">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <EditForm Model="BalanceSheetReportPostModel" OnValidSubmit="async () => await LoadBalancesheetReport()">
                <div class="modal-header">
                    <h6 class="modal-title">Custom</h6><button aria-label="Close" class="btn-close" data-bs-dismiss="modal"><span aria-hidden="true">&times;</span></button>
                </div>
                <div class="modal-body">

                    @if(PeriodTypeID == (int)ReportPeriods.Custom)
                    {
                        <div class="row">
                            <div class="col-12">
                                <div class="form-group">
                                    <label class="form-label mt-0 me-1">From Date : </label>
                                    <input type="date" class="form-control" @bind="BalanceSheetReportPostModel.Date">
                                    <ValidationMessage For="() => BalanceSheetReportPostModel.Date" />
                                </div>
                            </div>
                        </div>
                    }

                    @if (BalanceSheetReportPostModel.IsAdmin && Branches.Count > 1)
                    {
                        <div class="row">
                            <div class="col-12">
                                <div class="form-group">
                                    <label class="form-label mt-0 me-1">Branch : </label>
                                    <select name="country" id="timePeriodSelect" class="form-control form-select" @bind="BalanceSheetReportPostModel.BranchID">
                                        <option value="0">Choose</option>
                                        @foreach (var branch in Branches)
                                        {
                                            <option value="@(branch.ID)">@branch.Value</option>
                                        }
                                    </select>
                                    <ValidationMessage For="() => BalanceSheetReportPostModel.BranchID" />
                                </div>
                            </div>
                        </div>
                    }

                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Apply</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {

    [Inject] public AuthenticationStateProvider? AuthenticationStateProvider { get; set; }
    BalancesheetReportModel BalancesheetReportModel = new();
    BalanceSheetReportPostModel BalanceSheetReportPostModel = new();
    List<IdnValuePair> Branches = new();

    int PeriodTypeID = 0;
    protected override async Task OnInitializedAsync()
    {
        if (AuthenticationStateProvider is not null)
        {
            var localStateProvider = (LocalAuthenticationStateProvider)AuthenticationStateProvider;
            var authState = await localStateProvider.GetAuthenticationStateAsync();
            var user = authState.User;
            bool IsAuthenticated = user.Identity is not null ? user.Identity.IsAuthenticated : false;
            if (IsAuthenticated)
            {
                if (user.Claims.First(c => c.Type == "UserTypeID").Value == ((int)UserTypes.Client).ToString())
                {
                    BalanceSheetReportPostModel.IsAdmin = true;
                    Branches = await API.GetAsync<List<IdnValuePair>>("common/get-branch-list", true);
                    if (Branches.Count == 1)
                        BalanceSheetReportPostModel.BranchID = Branches[0].ID;
                }
            }
        }
        BalanceSheetReportPostModel.Date = DateTime.UtcNow;
        await LoadBalancesheetReport();
    }
    private async Task HandleReportPeriodSelected(ChangeEventArgs e)
    {
        PeriodTypeID = Convert.ToInt32(e.Value);
        if (PeriodTypeID == (int)ReportPeriods.Custom || Branches.Count > 1)
        {
            await JS.InvokeVoidAsync("ShowModal", "ReportPeriodModal");
            return;
        }
        switch (PeriodTypeID)
        {
            case (int)ReportPeriods.Today:
            case (int)ReportPeriods.This_week:
                BalanceSheetReportPostModel.Date = DateTime.UtcNow;
                break;

            case (int)ReportPeriods.This_month:
                BalanceSheetReportPostModel.Date = new DateTime(DateTime.UtcNow.Year, DateTime.UtcNow.Month, DateTime.DaysInMonth(DateTime.UtcNow.Year, DateTime.UtcNow.Month));
                break;

            case (int)ReportPeriods.This_quarter:
                int currentQuarter = (DateTime.UtcNow.Month - 1) / 3 + 1;
                int lastMonthOfQuarter = currentQuarter * 3;
                BalanceSheetReportPostModel.Date = new DateTime(DateTime.UtcNow.Year, lastMonthOfQuarter, DateTime.DaysInMonth(DateTime.UtcNow.Year, lastMonthOfQuarter));
                break;

            case (int)ReportPeriods.This_year:
                BalanceSheetReportPostModel.Date = new DateTime(DateTime.UtcNow.Year, 12, 31);
                break;

            case (int)ReportPeriods.Yesterday:
                BalanceSheetReportPostModel.Date = DateTime.UtcNow.AddDays(-1);
                break;

            case (int)ReportPeriods.Previous_week:
                int daysToSubtract = (int)DateTime.UtcNow.DayOfWeek - (int)DayOfWeek.Sunday;
                if (daysToSubtract < 0)
                    daysToSubtract += 7;
                BalanceSheetReportPostModel.Date = DateTime.UtcNow.AddDays(-daysToSubtract);
                break;

            case (int)ReportPeriods.Previous_month:
                DateTime firstDayOfThisMonth = new DateTime(DateTime.UtcNow.Year, DateTime.UtcNow.Month, 1);
                BalanceSheetReportPostModel.Date = firstDayOfThisMonth.AddDays(-1);
                break;

            case (int)ReportPeriods.Previous_quarter:
                BalanceSheetReportPostModel.Date = GetEndOfPreviousQuarter(DateTime.UtcNow);
                break;

            case (int)ReportPeriods.Previous_year:
                BalanceSheetReportPostModel.Date = new DateTime(DateTime.UtcNow.Year - 1, 12, 31);
                break;
        }
        await LoadBalancesheetReport();
    }
    static DateTime GetEndOfPreviousQuarter(DateTime currentDate)
    {
        DateTime startOfCurrentQuarter = new DateTime(currentDate.Year, ((currentDate.Month - 1) / 3) * 3 + 1, 1);
        DateTime endOfPreviousQuarter = startOfCurrentQuarter.AddDays(-1);
        return endOfPreviousQuarter;
    }
    private async Task LoadBalancesheetReport()
    {
        BalancesheetReportModel = await API.PostAsync<BalancesheetReportModel, BalanceSheetReportPostModel>("report/balance-sheet", BalanceSheetReportPostModel);
    }
    private void NavigateToReportsPage()
    {
        Nav.NavigateTo("reports");
    }
}
