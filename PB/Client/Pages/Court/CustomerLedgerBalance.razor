@page "/customer-ledger-balance"

@using PB.Shared.Models;
@using PB.Shared.Models.Common;
@using PB.Shared.Models.Court;

<PageLayoutNew>
    <div class="main-container container-fluid">
        <div class="page-header">
            <div class="card">
                <div class="card-header py-2">
                    <ListPageHeader Settings="CourtFilterSettings" OnFilterButtonClick="FilterListPageTo" />
                </div>
                <div class="card-body">
                    <table class="table border text-nowrap text-md-nowrap table-hover ">
                        <thead>
                            <tr>
                                <th>
                                    Sl No.
                                </th>
                                <th>
                                    Customer Name
                                </th>
                                <th>
                                    Phone
                                </th>
                                <th>
                                    Email Address
                                </th>
                                <th>
                                    Balance
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Data.Select((data, index) => new { index, data }))
                            {
                                <tr @onclick="@(()=>Nav.NavigateTo($"customer-ledger-report/{item.data.LedgerID}"))" style="cursor:pointer">
                                    <td>
                                        @((Model.PageIndex - 1) * Model.PageSize + 1 + item.index)
                                    </td>
                                    <td>
                                        @item.data.Name
                                    </td>
                                    <td>
                                        @item.data.Phone
                                    </td>

                                    <td>@item.data.EmailAddress</td>
                                    <td class="text-end">
                                        @item.data.Balance
                                    </td>
                                </tr>

                            }

                        </tbody>
                    </table>
                    <PaginationCustom PageSize="Model.PageSize" TotalCount="Model.TotalCount" TotalPages="Model.TotalPages" PageIndex="Model.PageIndex" LoadPageIndex="PageIndex" />

                </div>
            </div>
        </div>
    </div>

</PageLayoutNew>


@code {
    private PagedList<CustomerLedgerBalanceModel> Model = new();
    private PagedListPostModelWithFilter SearchModel = new();


    protected override async Task OnInitializedAsync()
    {
        List<FilterSortInputModel> SortInputItems = new()
        {
            new()
            {
                DisplayName = "Name",
                FieldName = "E.Name"
            },
            new()
            {
                DisplayName = "Phone",
                FieldName = "E.Phone"
            },
            new()
            {
                DisplayName = "Email Address",
                FieldName = "E.EmailAddress"
            },
            new()
            {
                DisplayName = "Balance",
                FieldName = "Balance"
            }
        };

        CourtFilterSettings = new()
            {
                SearchPlaceHolder = "Search by Customer Name,Phone,Email Address",
                NeedSortOption = true,
                NeedFilterOption = false,
                DateFilters = null,
                Heading = "Customer Ledger Balance",
                SinglePageURL = "customer-ledger-history",
                SortMenuItems = SortInputItems,
                NeedAddButton = false
            };

        await LoadCourtBookingData();
    }
    #region Sort, Filter

    HeaderSettingsModel CourtFilterSettings = new();

    private async Task FilterListPageTo(PagedListPostModelWithFilter? filterModel)
    {
        SearchModel = filterModel == null ? new() : filterModel;
        await LoadCourtBookingData();
    }

    private async Task PageIndex(int pageIndex)
    {
        SearchModel.PageIndex = pageIndex;
        await LoadCourtBookingData();
    }

    #endregion
    private async Task LoadCourtBookingData()
    {

        Model = await API.PostAsync<PagedList<CustomerLedgerBalanceModel>, PagedListPostModelWithFilter>("court/get-customer-ledger-balance", SearchModel);

    }


}
